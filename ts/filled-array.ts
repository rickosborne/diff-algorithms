/**
 * Generate an array of the given length, filled with the value `undefined`.
 */
export function filledArray(count: number): undefined[];
/**
 * Generate an array of the given length, filled with values generated by
 * the supplied callback.
 */
export function filledArray<ValueT>(count: number, filler: (index: number) => ValueT): ValueT[];
/**
 * Generate an array of the given length, filled with the given value.
 */
export function filledArray<ValueT>(count: number, value: ValueT): ValueT[];
/**
 * Generate an array of the given length, using the optional fill value or function.
 */
export function filledArray<ValueT>(count: number, filler?: undefined | ValueT | ((index: number) => ValueT)): ValueT[] {
	let fill: (index: number) => ValueT;
	if (filler === undefined) {
		fill = () => undefined as ValueT;
	} else if (typeof filler === "function") {
		fill = filler as typeof fill;
	} else {
		fill = () => filler;
	}
	return Array.from(Array(count).keys()).map(fill);
}
